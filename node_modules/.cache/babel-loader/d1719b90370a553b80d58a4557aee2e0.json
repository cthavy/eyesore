{"ast":null,"code":"var _jsxFileName = \"/Users/casey/workspace/eyesore/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    style: props.style,\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  });\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.MAX_ROUNDS = 10;\n    this.SIGHT_TIER = ['Color-blind', 'Below Average', 'Average', 'Eagle', 'Robot'];\n    this.ROUND_TIMER = 20000;\n    this.state = {\n      currentRound: 0,\n      score: 0,\n      answerSquare: 0,\n      status: null,\n      baseColor: 'rgb(251, 232, 106)',\n      offColor: 'rgb(240, 230, 100)'\n    };\n    this.nextRound();\n  }\n\n  nextRound() {\n    if (this.state.currentRound === this.MAX_ROUNDS) {\n      // end the game\n      return;\n    } // add pause and turn off touch\n\n\n    let R = this.randomizeHelper(244);\n    let G = this.randomizeHelper(244);\n    let B = this.randomizeHelper(244);\n    let d = this.randomizeHelper(2) === 1 ? 6 : -6; // add difficulty\n\n    let answer = this.randomizeHelper(9);\n    this.setState({\n      answerSquare: answer,\n      baseColor: `rgb(${R}, ${G}, ${B})`,\n      offColor: `rgb(${R + d}, ${G + d}, ${B + d})`\n    });\n  }\n\n  randomizeHelper(base) {\n    return Math.floor(Math.random() * base);\n  }\n\n  handleClick(i) {\n    let score = this.state.score;\n    let status = false;\n\n    if (this.checkAnswer(i)) {\n      status = true;\n      score++;\n    }\n\n    this.setState({\n      status: status,\n      score: score,\n      currentRound: this.state.currentRound + 1\n    }, this.nextRound());\n  } // render with random color and offset one\n\n\n  renderSquare(i) {\n    const divStyle = {\n      backgroundColor: i === this.state.answerSquare ? this.state.offColor : this.state.baseColor,\n      borderColor: i === this.state.answerSquare ? this.state.offColor : this.state.baseColor\n    };\n    return /*#__PURE__*/React.createElement(Square, {\n      onClick: () => this.handleClick(i),\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    let status = this.state.status ? 'Correct' : 'Find the odd one out';\n\n    if (this.state.currentRound === this.MAX_ROUNDS) {\n      status = `Game is over. Score: ${this.state.score}/${this.MAX_ROUNDS}`;\n    } // @todo create more squares per round\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n  /**\n   * Check if clicked on was correct\n   * */\n\n\n  checkAnswer(i) {\n    if (i === this.state.answerSquare) {\n      console.log('correct');\n      return true;\n    } else {\n      console.log('incorrect');\n      return false;\n    }\n  }\n\n} // @todo refactor naming\n\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/casey/workspace/eyesore/src/index.js"],"names":["React","ReactDOM","Square","props","style","onClick","Board","Component","constructor","MAX_ROUNDS","SIGHT_TIER","ROUND_TIMER","state","currentRound","score","answerSquare","status","baseColor","offColor","nextRound","R","randomizeHelper","G","B","d","answer","setState","base","Math","floor","random","handleClick","i","checkAnswer","renderSquare","divStyle","backgroundColor","borderColor","render","console","log","Game","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" style={props.style} onClick={props.onClick}></button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.MAX_ROUNDS = 10;\n    this.SIGHT_TIER = ['Color-blind', 'Below Average', 'Average', 'Eagle', 'Robot']\n    this.ROUND_TIMER = 20000;\n\n    this.state = {\n      currentRound: 0,\n      score: 0,\n      answerSquare: 0,\n      status: null,\n\n      baseColor: 'rgb(251, 232, 106)',\n      offColor: 'rgb(240, 230, 100)'\n    }\n\n    this.nextRound();\n  }\n\n  nextRound() {\n    if (this.state.currentRound === this.MAX_ROUNDS) {\n      // end the game\n      return;\n    }\n\n    // add pause and turn off touch\n\n    let R = this.randomizeHelper(244);\n    let G = this.randomizeHelper(244);\n    let B = this.randomizeHelper(244);\n    let d = this.randomizeHelper(2) === 1 ? 6 : -6; // add difficulty\n\n    let answer = this.randomizeHelper(9);\n\n    this.setState({\n      answerSquare: answer,\n      baseColor: `rgb(${R}, ${G}, ${B})`,\n      offColor: `rgb(${R+d}, ${G+d}, ${B+d})`\n    });\n  }\n\n  randomizeHelper(base) {\n    return Math.floor(Math.random()*base);\n  }\n\n  handleClick(i) {\n    let score = this.state.score;\n    let status = false;\n    if (this.checkAnswer(i)) {\n      status = true;\n      score++;\n    }\n\n    this.setState({\n      status: status,\n      score: score,\n      currentRound: this.state.currentRound+1\n    }, this.nextRound());\n  }\n\n  // render with random color and offset one\n  renderSquare(i) {\n    const divStyle = {\n      backgroundColor: i === this.state.answerSquare ? this.state.offColor : this.state.baseColor,\n      borderColor: i === this.state.answerSquare ? this.state.offColor : this.state.baseColor\n    };\n\n    return (\n      <Square \n        onClick={() => this.handleClick(i)}\n        style={divStyle}\n      />\n    )\n  }\n\n  render() {\n    let status = this.state.status ? 'Correct' : 'Find the odd one out';\n    if (this.state.currentRound === this.MAX_ROUNDS) {\n      status = `Game is over. Score: ${this.state.score}/${this.MAX_ROUNDS}`\n    }\n\n    // @todo create more squares per round\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Check if clicked on was correct\n   * */ \n  checkAnswer(i) {\n    if (i === this.state.answerSquare) {\n      console.log('correct');\n      return true;\n    } else {\n      console.log('incorrect');\n      return false;\n    }\n  }\n}\n\n// @todo refactor naming\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}