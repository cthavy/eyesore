{"ast":null,"code":"var _jsxFileName = \"/Users/casey/workspace/eyesore/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    style: props.style,\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    const MAX_ROUNDS = 10;\n    const SIGHT_TIER = ['Color-blind', 'Below Average', 'Average', 'Eagle', 'Robot'];\n    const ROUND_TIMER = 20000;\n    this.state = {\n      squares: Array(12).fill(null),\n      xIsNext: true,\n      currentRound: 1,\n      score: 0,\n      answerSquare: 0,\n      baseColor: 'rgb(251, 232, 106)',\n      offColor: 'rgb(240, 230, 100)'\n    };\n  }\n\n  nextRound() {\n    // todo add difficulty\n    let R = Math.floor(Math.random() * 245);\n    let G = Math.floor(Math.random() * 245);\n    let B = Math.floor(Math.random() * 245);\n    let answer = Math.floor(Math.random() * 9);\n    this.setState({\n      answerSquare: answer,\n      baseColor: `rgb(${R}, ${G}, ${B})`,\n      offColor: `rgb(${R + 5}, ${G + 5}, ${B + 5})`\n    });\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (this.checkAnswer(squares) || squares[i]) return;\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    }, this.nextRound());\n  } // render with random color and offset one\n\n\n  renderSquare(i) {\n    const divStyle = {\n      backgroundColor: i === this.state.answerSquare ? this.state.offColor : this.state.baseColor,\n      borderColor: i === this.state.answerSquare ? this.state.offColor : this.state.baseColor\n    };\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    const correct = this.checkAnswer(this.state.squares);\n    let status = correct ? 'Correct' : ' '; // @todo create more squares per round\n    // @question how do we make the css flexible enough as squares grow\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, this.renderSquare(5), this.renderSquare(6), this.renderSquare(7)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, this.renderSquare(9), this.renderSquare(10), this.renderSquare(11)));\n  }\n  /** @todo\n   * Check if clicked on was correct\n   * */\n\n\n  checkAnswer(squares) {}\n\n} // @todo refactor naming\n\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/casey/workspace/eyesore/src/index.js"],"names":["React","ReactDOM","Square","props","style","onClick","value","Board","Component","constructor","MAX_ROUNDS","SIGHT_TIER","ROUND_TIMER","state","squares","Array","fill","xIsNext","currentRound","score","answerSquare","baseColor","offColor","nextRound","R","Math","floor","random","G","B","answer","setState","handleClick","i","slice","checkAnswer","renderSquare","divStyle","backgroundColor","borderColor","render","correct","status","Game","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" style={props.style} onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const MAX_ROUNDS = 10;\n    const SIGHT_TIER = ['Color-blind', 'Below Average', 'Average', 'Eagle', 'Robot']\n    const ROUND_TIMER = 20000;\n\n    this.state = {\n      squares: Array(12).fill(null),\n      xIsNext: true,\n\n      currentRound: 1,\n      score: 0,\n      answerSquare: 0,\n\n      baseColor: 'rgb(251, 232, 106)',\n      offColor: 'rgb(240, 230, 100)'\n    }\n  }\n\n  nextRound() {\n    // todo add difficulty\n    let R = Math.floor(Math.random()*245);\n    let G = Math.floor(Math.random()*245);\n    let B = Math.floor(Math.random()*245);\n\n    let answer = Math.floor(Math.random()*9);\n\n    this.setState({\n      answerSquare: answer,\n      baseColor: `rgb(${R}, ${G}, ${B})`,\n      offColor: `rgb(${R+5}, ${G+5}, ${B+5})`\n    });\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (this.checkAnswer(squares) || squares[i]) return;\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    }, this.nextRound());\n  }\n\n  // render with random color and offset one\n  renderSquare(i) {\n    const divStyle = {\n      backgroundColor: i === this.state.answerSquare ? this.state.offColor : this.state.baseColor,\n      borderColor: i === this.state.answerSquare ? this.state.offColor : this.state.baseColor\n    };\n\n    return (\n      <Square \n        value={this.state.squares[i]} \n        onClick={() => this.handleClick(i)}\n        style={divStyle}\n      />\n    )\n  }\n\n  render() {\n    const correct = this.checkAnswer(this.state.squares);\n    let status = correct ? 'Correct' : ' ';\n\n    // @todo create more squares per round\n    // @question how do we make the css flexible enough as squares grow\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(5)}\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(9)}\n          {this.renderSquare(10)}\n          {this.renderSquare(11)}\n        </div>\n      </div>\n    );\n  }\n\n  /** @todo\n   * Check if clicked on was correct\n   * */ \n  checkAnswer(squares) {\n    \n  }\n}\n\n// @todo refactor naming\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}